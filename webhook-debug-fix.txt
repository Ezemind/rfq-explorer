
// üîß CRITICAL FIX: Ensure immediate processing is called for incoming audio

// In the main webhook handler around line 440, change this section:

// üéØ IMMEDIATE MEDIA PROCESSING - This is the key fix!
let mediaUrl = null, mediaFilename = null, mediaMimeType = null, mediaSize = null;
let isGoogleDrive = false;

if (mediaInfo && mediaInfo.id) {
  console.log('‚ö° IMMEDIATE PROCESSING:', mediaInfo);
  
  // ‚úÖ FIX: Add await here and proper error handling
  try {
    const mediaResult = await processMediaImmediately(mediaInfo.id, customerPhone, message.type);
    if (mediaResult) {
      mediaUrl = mediaResult.webPath;
      mediaFilename = mediaResult.filename;
      mediaMimeType = mediaResult.mimeType;
      mediaSize = mediaResult.size;
      isGoogleDrive = mediaResult.isGoogleDrive;
      console.log(`‚úÖ IMMEDIATE SUCCESS: ${mediaResult.filename} (Google Drive: ${isGoogleDrive})`);
    } else {
      console.log('‚ùå IMMEDIATE PROCESSING FAILED - no result returned');
    }
  } catch (immediateError) {
    console.error('‚ùå IMMEDIATE PROCESSING ERROR:', immediateError.message);
    // Fallback to standard processing
    mediaUrl = null;
  }
}



// Add this debug code to webhook-immediate-processing.js around line 440:

console.log('üîç DEBUG - mediaInfo:', mediaInfo);
console.log('üîç DEBUG - message.type:', message.type);
console.log('üîç DEBUG - mediaInfo?.id:', mediaInfo?.id);

if (mediaInfo && mediaInfo.id) {
  console.log('‚ö° CALLING processMediaImmediately with:', {
    mediaId: mediaInfo.id,
    customerPhone: customerPhone,
    messageType: message.type
  });
  
  const mediaResult = await processMediaImmediately(mediaInfo.id, customerPhone, message.type);
  console.log('üîç DEBUG - mediaResult:', mediaResult);
  // ... rest of code
}
